if (currentBuild.getBuildCauses().toString().contains('BranchIndexingCause')) {
  print "INFO: Build skipped due to trigger being Branch Indexing"
  currentBuild.result = 'ABORTED' // optional, gives a better hint to the user that it's been skipped, rather than the default which shows it's successful
  return
}

pipeline {
    agent {
       kubernetes {
         //cloud 'kubernetes'
         label 'node14'
       }
    }
    parameters {
        string(name:'APP_NAME', defaultValue: '', description:'项目名') 
        choice(description: "选择pipline模板", name: "PIPE_TEMP",choices: ['nodejs','python'])
        choice(description: "选择部署环境", name: "DEPLOY_ENV", choices: ['test','beta','prod'])
    }
    environment {
        GITLAB_KEY = 'git-ssh'
        KUBECONFIG_CREDENTIAL_ID = 'kubeconf'
        REGISTRY = 'reg.yhroot.com'
        CICD_BRANCH = 'test'
        PIPE_NAME = 'pinp'
    }

    stages {

        stage ('build pipeline') {
            steps {
                container ('pinp') {
                  dir("${PIPE_NAME}/pinp-repo") {
                       script {
       	         if  ("master" ==  'master' ) {
             		echo  'I only execute on the master branch'
        	         }  else  {
             		echo  'I execute elsewhere'
         	         }
                       }
                       sh "ls -ah"
                  }
                }
            }
        }

  }
}
